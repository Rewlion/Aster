#include "frame.inc.tfx"
#include "mesh.inc.tfx"
#include "materials.inc.tfx"

technique TestStaticMesh {
  support scope FrameScope;
  support scope StaticModelScope;

  USE_STATIC_MESH();
  USE_MATERIALS_PACKING();

  #hlsl
    struct VsOutput
    {
      float4 pos: SV_Position;
      float2 uv: TEXTURE0;
      float3 normal: TEXTURE1;
    };

    VsOutput vs_main(TestStaticMesh_input input)
    {
      float4x4 mvp = FrameScope.viewProj;
      mvp = mul(mvp, StaticModelScope.modelTm);

      VsOutput output;
      output.pos = mul(mvp, float4(input.pos, 1.0));
      output.uv = input.uv;
      output.normal = normalize(mul(StaticModelScope.normalTm, float4(input.normal, 0.0)).xyz);

      return output;
    }

    PackedMaterial ps_main(VsOutput input)
    {
      float4 albedo = albedoTex.Sample(modelSampler, input.uv);

      UnpackedMaterial mat;
      initAlbedo(mat, float3(1.0, 1.0, 1.0));
      initMetal(mat, 1.0);
      initRoughness(mat, 0.0);
      initNormal(mat, input.normal);

      return packMaterial(mat);
    }
  #end

  compile(vs_6_1, vs_main);
  compile(ps_6_1, ps_main);
};

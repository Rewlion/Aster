#include "test_include.tfx"

scope FrameScope {
  reserve:
    descriptor_set(0);
    cbuffer(0);
    register(sampler, 1-2);

  sampler modelSampler = extern(model_sampler);

  float4x4 viewProj = extern(view_proj);
  float3 cameraPos = extern(camera_pos);
  float secSinceStart = extern(sec_since_start);
};

scope StaticModelScope {
  reserve:
    descriptor_set(1);
    cbuffer(0);
    register(texture, 1-2);

  Texture2D albedo = channel(albedo);

  float4x4 modelTm = channel(model_tm);
  float4x4 normalTm = channel(normal_tm);
};

technique SceneOpaque {
  support scope FrameScope;
  support scope StaticModelScope;

  INIT_STATIC_MESH();

  #hlsl
    struct VsOutput
    {
      float4 pos: SV_Position;
      float2 uv: TEXTURE0;
    };

    VsOutput vs_main(SceneOpaque_input input)
    {
      float4x4 mvp = FrameScope.viewProj;
      mvp = mul(mvp, StaticModelScope.modelTm);

      VsOutput output;
      output.pos = mul(mvp, float4(input.pos, 1.0));
      output.uv = input.uv;

      return output;
    }

    float4 ps_main(VsOutput input): SV_Target0
    {
      return albedo.Sample(modelSampler, input.uv);
    }
  #end

  compile(vs_6_1, vs_main);
  compile(ps_6_1, ps_main);
};

#include "frame.inc.tfx"
#include "materials.inc.tfx"

technique DebugLine {
  support scope FrameScope;

  render_state:
    cull_mode = none;
    primitive_topology = line_list;
    depth:
      test = true;
      write = no;
    input:
      buffer(0):
        float3 worldPos: POSITION0;
        float3 color: TEXTURE0;

  USE_MATERIALS_PACKING();

  #hlsl
  struct VsOutput
  {
    float4 pos: SV_Position;
    float4 prevPos : TEXTURE0;
    float4 curPos : TEXTURE1;
    float3 color: TEXTURE2;
  };

  VsOutput vs_main(DebugLine_input input)
  {
      VsOutput output;
      output.pos = mul(FrameScope.viewProj, float4(input.worldPos, 1.0));
      output.prevPos = mul(FrameScope.prevViewProj, float4(input.worldPos, 1.0));
      output.curPos = output.pos;
      output.color = input.color;

      return output;
  }

  struct PsOutput
  {
    float3 color : SV_Target0;
    float3 motion : SV_Target1;
  };

  PsOutput ps_main(VsOutput input)
  {
    PsOutput o;
    o.color = input.color;
    o.motion = float3(calcMotion(input.prevPos, input.curPos), 0.0);
    return o;
  }
  #end

  compile(vs, vs_main);
  compile(ps, ps_main);
};
technique_macro USE_ENVI_IBL {
  #hlsl
  float3 sampleEnviSpecular(float envi_mips, float roughness, float3 N)
  {
    uint mipLevel = roughness * (envi_mips-1.0);

    float2 thetaPhi = decartianToSpherical(N);
    float2 uv = (thetaPhi / float2(PI, 2 * PI)).yx;
    return enviSpecular.SampleLevel(linearClampSampler, uv, mipLevel).rgb;
  }

  float2 sampleEnviBRDF(float roughness, float NoV)
  {
    return enviBRDF.SampleLevel(linearClampSampler, float2(NoV, roughness), 0).rg;
  }

  float3 calcSpecularIBL(float3 specular, float3 F0, float roughness, float NoV, float3 R)
  {
    float2 brdf = sampleEnviBRDF(roughness, NoV);
    return specular * (F0 * brdf.x + brdf.y);
  }

  float3 enviSpecularIBL(float envi_mips, float3 F0, float roughness, float NoV, float3 R)
  {
    float3 specular = sampleEnviSpecular(envi_mips, roughness, R);
    return calcSpecularIBL(specular, F0, roughness, NoV, R);
  }

  #end
};
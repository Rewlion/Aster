technique_macro USE_ENVI_IBL {
  #hlsl
  float3 sampleEnviSpecular(float roughness, float3 N)
  {
    uint mipLevel = roughness * (ResolveGbufferScope.enviMips-1.0);

    float2 thetaPhi = decartianToSpherical(N);
    float2 uv = (thetaPhi / float2(PI, 2 * PI)).yx;
    return enviSpecular.SampleLevel(linearClampSampler, uv, mipLevel).rgb;
  }

  float2 sampleEnviBRDF(float roughness, float NoV)
  {
    return enviBRDF.Sample(linearClampSampler, float2(NoV, roughness)).rg;
  }

  float3 enviSpecularIBL(float3 F0, float roughness, float3 N, float3 V)
  {
    float NoV = saturate(dot(N,V));
    float3 specular = sampleEnviSpecular(roughness, reflect(-V,N));
    float2 brdf = sampleEnviBRDF(roughness, NoV);

    return specular * (F0 * brdf.x + brdf.y);
  }
  #end
};
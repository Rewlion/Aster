technique_macro USE_DEPTH_UTILS {
  #hlsl
    float linearize_z(const float depth, const float znear, const float zfar)
    {
      return zfar*znear / ( zfar - depth * (zfar - znear) ); //inverse z
    }

    float3 interpolateFarPlanePoint(float3 far_plane_point, const float depth, const float znear, const float zfar)
    {
      return far_plane_point * linearize_z(depth, znear, zfar) / znear;
    }

    float3 calcWorldPos(const float3 camera_pos, float3 far_plane_point_ws, const float depth, const float znear, const float zfar)
    {
      return camera_pos + interpolateFarPlanePoint(far_plane_point_ws, depth, znear, zfar);
    }
  #end
};

// this file is generated by ecs codegen
// do not edit
#include <engine/ecs/ecs.h>
#include <engine/ecs/components_accessor.h>
#include <EASTL/functional.h>

#include "opaque.ecs.cpp" 

using namespace ecs;

static void mk_gbuffer_main_pass_node_internal(Event* event, ComponentsAccessor& accessor)
{
  const Engine::OnFrameGraphInit* casted_event = reinterpret_cast<const Engine::OnFrameGraphInit*>(event);

  mk_gbuffer_main_pass_node(*casted_event);
}


static EventSystemRegistration mk_gbuffer_main_pass_node_registration(
  mk_gbuffer_main_pass_node_internal,
  compile_ecs_name_hash("OnFrameGraphInit"),
  {

  },
  "mk_gbuffer_main_pass_node"
);


static void mk_gbuffer_resolve_node_internal(Event* event, ComponentsAccessor& accessor)
{
  const Engine::OnFrameGraphInit* casted_event = reinterpret_cast<const Engine::OnFrameGraphInit*>(event);

  mk_gbuffer_resolve_node(*casted_event);
}


static EventSystemRegistration mk_gbuffer_resolve_node_registration(
  mk_gbuffer_resolve_node_internal,
  compile_ecs_name_hash("OnFrameGraphInit"),
  {

  },
  "mk_gbuffer_resolve_node"
);


static void mk_transparent_sync_node_internal(Event* event, ComponentsAccessor& accessor)
{
  const Engine::OnFrameGraphInit* casted_event = reinterpret_cast<const Engine::OnFrameGraphInit*>(event);

  mk_transparent_sync_node(*casted_event);
}


static EventSystemRegistration mk_transparent_sync_node_registration(
  mk_transparent_sync_node_internal,
  compile_ecs_name_hash("OnFrameGraphInit"),
  {

  },
  "mk_transparent_sync_node"
);

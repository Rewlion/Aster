// this file is generated by ecs codegen
// do not edit
#include <engine/ecs/ecs.h>
#include <engine/ecs/components_accessor.h>
#include <EASTL/functional.h>

#include "spatial_storage_binning.ecs.cpp" 

using namespace ecs;

//Engine::OnFrameGraphInit handler
static
void mk_fg_node_gibs_spatial_storage_binning(Event*, ComponentsAccessor&)
{
  fg::register_node("gibs_spatial_storage_binning", FG_FILE_DECL, [](fg::Registry& reg)
  { 
    auto gibs_surfels_lifetime = reg.modifyBuffer("gibs_surfels_lifetime", gapi::BufferState::BF_STATE_UAV_RW);
    auto gibs_surfels_storage = reg.readBuffer("gibs_surfels_storage", gapi::BufferState::BF_STATE_SRV, false);
    auto gibs_surfels_spatial_storage = reg.modifyBuffer("gibs_surfels_spatial_storage", gapi::BufferState::BF_STATE_UAV_RW);
    auto gibs_nonlinear_aabbs = reg.readBuffer("gibs_nonlinear_aabbs", gapi::BufferState::BF_STATE_SRV, false);
    auto gibs_surfels_pool = reg.modifyBuffer("gibs_surfels_pool", gapi::BufferState::BF_STATE_UAV_RW);
    auto gibs_surfels_meta = reg.modifyBuffer("gibs_surfels_meta", gapi::BufferState::BF_STATE_UAV_RW);

    return [gibs_surfels_lifetime,gibs_surfels_storage,gibs_surfels_spatial_storage,gibs_nonlinear_aabbs,gibs_surfels_pool,gibs_surfels_meta](gapi::CmdEncoder& encoder)
    {
      tfx::set_extern("surfelsLifeTime", gibs_surfels_lifetime.get());
      tfx::set_extern("surfelsStorage", gibs_surfels_storage.get());
      tfx::set_extern("surfelsSpatialStorage", gibs_surfels_spatial_storage.get());
      tfx::set_extern("gibsNonlinearAABBs", gibs_nonlinear_aabbs.get());
      tfx::set_extern("surfelsPool", gibs_surfels_pool.get());
      tfx::set_extern("surfelsMeta", gibs_surfels_meta.get());
      gibs_spatial_storage_binning(encoder);
    };
  });
}

static
EventSystemRegistration mk_fg_node_gibs_spatial_storage_binning_registration(
  mk_fg_node_gibs_spatial_storage_binning,
  compile_ecs_name_hash("OnFrameGraphInit"),
  {
  },
  "mk_fg_node_gibs_spatial_storage_binning"
);

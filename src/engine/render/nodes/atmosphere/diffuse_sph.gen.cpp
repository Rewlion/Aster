// this file is generated by ecs codegen
// do not edit
#include <engine/ecs/ecs.h>
#include <engine/ecs/components_accessor.h>
#include <EASTL/functional.h>

#include "diffuse_sph.ecs.cpp" 

using namespace ecs;

//Engine::OnFrameGraphInit handler
static
void mk_fg_node_atm_sph_render(Event*, ComponentsAccessor&)
{
  fg::register_node("atm_sph_render", FG_FILE_DECL, [](fg::Registry& reg)
  { 
    auto sph_buf = reg.modifyBuffer("sph_buf", gapi::BufferState::BF_STATE_UAV_RW);
    auto atm_tr_lut = reg.readTexture("atm_tr_lut", gapi::TextureState::ShaderRead, false);
    auto atm_sky_lut = reg.readTexture("atm_sky_lut", gapi::TextureState::ShaderRead, false);

    return [sph_buf,atm_tr_lut,atm_sky_lut](gapi::CmdEncoder& encoder)
    {
      tfx::set_extern("atmParamsBuffer", sph_buf.get());
      tfx::set_extern("trLUT", atm_tr_lut.get());
      tfx::set_extern("skyLUT", atm_sky_lut.get());
      atm_sph_render_exec(encoder);
    };
  });
}

static
EventSystemRegistration mk_fg_node_atm_sph_render_registration(
  mk_fg_node_atm_sph_render,
  compile_ecs_name_hash("OnFrameGraphInit"),
  {
  },
  "mk_fg_node_atm_sph_render"
);

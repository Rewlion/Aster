// this file is generated by ecs codegen
// do not edit
#include <engine/ecs/ecs.h>
#include <engine/ecs/components_accessor.h>
#include <EASTL/functional.h>

#include "render_state.ecs.cpp" 

using namespace ecs;

const static DirectQueryRegistration query_atmosphere_render_state_queryReg{
  {
    DESCRIBE_QUERY_COMPONENT("atmosphere_render_state", AtmosphereRenderState)
  },
  "query_atmosphere_render_state"};
const static query_id_t query_atmosphere_render_state_queryId = query_atmosphere_render_state_queryReg.getId();


void query_atmosphere_render_state (eastl::function<
  void(
    AtmosphereRenderState& atmosphere_render_state)> cb)
{
  ecs::get_registry().query(query_atmosphere_render_state_queryId, [&](ComponentsAccessor& accessor)
  {
    AtmosphereRenderState& atmosphere_render_state = accessor.get<AtmosphereRenderState>(compile_ecs_name_hash("atmosphere_render_state"));
    cb(atmosphere_render_state);
  });
}


static void on_sun_orientation_changed_internal(Event* event, ComponentsAccessor& accessor)
{
  const Engine::SunOrientationChanged* casted_event = reinterpret_cast<const Engine::SunOrientationChanged*>(event);
  AtmosphereRenderState& atmosphere_render_state = accessor.get<AtmosphereRenderState>(compile_ecs_name_hash("atmosphere_render_state"));
  on_sun_orientation_changed(*casted_event, atmosphere_render_state);
}


static EventSystemRegistration on_sun_orientation_changed_registration(
  on_sun_orientation_changed_internal,
  compile_ecs_name_hash("SunOrientationChanged"),
  {
    DESCRIBE_QUERY_COMPONENT("atmosphere_render_state", AtmosphereRenderState)
  },
  "on_sun_orientation_changed"
);

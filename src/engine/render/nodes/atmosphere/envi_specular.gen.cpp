// this file is generated by ecs codegen
// do not edit
#include <engine/ecs/ecs.h>
#include <engine/ecs/components_accessor.h>
#include <EASTL/functional.h>

#include "envi_specular.ecs.cpp" 

using namespace ecs;

//Engine::OnFrameGraphInit handler
static
void mk_fg_node_atm_envi_specular(Event*, ComponentsAccessor&)
{
  fg::register_node("atm_envi_specular", FG_FILE_DECL, [](fg::Registry& reg)
  { 
    auto atm_tr_lut = reg.readTexture("atm_tr_lut", gapi::TextureState::ShaderRead, false);
    auto atm_sky_lut = reg.readTexture("atm_sky_lut", gapi::TextureState::ShaderRead, false);
    auto atm_envi_specular = reg.modifyTexture("atm_envi_specular", gapi::TextureState::RenderTarget);
    auto atm_envi_mips = reg.readBlob<int>("atm_envi_mips");

    return [atm_tr_lut,atm_sky_lut,atm_envi_specular,atm_envi_mips](gapi::CmdEncoder& encoder)
    {
      tfx::set_extern("trLUT", atm_tr_lut.get());
      tfx::set_extern("skyLUT", atm_sky_lut.get());
      atm_envi_specular_exec(encoder, atm_envi_specular.get(), atm_envi_mips.get());
    };
  });
}

static
EventSystemRegistration mk_fg_node_atm_envi_specular_registration(
  mk_fg_node_atm_envi_specular,
  compile_ecs_name_hash("OnFrameGraphInit"),
  {
  },
  "mk_fg_node_atm_envi_specular"
);

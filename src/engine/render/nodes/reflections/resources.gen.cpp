// this file is generated by ecs codegen
// do not edit
#include <engine/ecs/ecs.h>
#include <engine/ecs/components_accessor.h>
#include <EASTL/functional.h>

#include "resources.ecs.cpp" 

using namespace ecs;

//Engine::OnFrameGraphInit handler
static
void mk_fg_node_reflections_resources(Event*, ComponentsAccessor&)
{
  fg::register_node("reflections_resources", FG_FILE_DECL, [](fg::Registry& reg)
  { 
    const uint2 __renderSize__ = reg.getRenderSize();


    auto reflections_target = reg.createTexture("reflections_target",
      gapi::TextureAllocationDescription{
        .format =          gapi::TextureFormat::R32G32B32A32_S,
        .extent =          uint3(__renderSize__, 1),
        .mipLevels =       1,
        .arrayLayers =     1,
        .samplesPerPixel = gapi::TextureSamples::s1,
        .usage =           (gapi::TextureUsage)(gapi::TextureUsage::TEX_USAGE_UAV | gapi::TextureUsage::TEX_USAGE_SRV)
      },
      gapi::TextureState::ShaderReadWrite,
      false
    );


    return [reflections_target](gapi::CmdEncoder& encoder)
    {
      reflections_resources(encoder, reflections_target.get());
    };
  });
}

static
EventSystemRegistration mk_fg_node_reflections_resources_registration(
  mk_fg_node_reflections_resources,
  compile_ecs_name_hash("OnFrameGraphInit"),
  {
  },
  "mk_fg_node_reflections_resources"
);

// this file is generated by ecs codegen
// do not edit
#include <engine/ecs/ecs.h>
#include <engine/ecs/components_accessor.h>
#include <EASTL/functional.h>

#include "temporal_accumulation.ecs.cpp" 

using namespace ecs;

//Engine::OnFrameGraphInit handler
static
void mk_fg_node_reflections_temporal_acc(Event*, ComponentsAccessor&)
{
  fg::register_node("reflections_temporal_acc", FG_FILE_DECL, [](fg::Registry& reg)
  { 
    const uint2 __renderSize__ = reg.getRenderSize();

    fg::dsl::AccessDecorator render_size{__renderSize__};
    auto motionBuf = reg.readTexture("motionBuf", gapi::TextureState::ShaderRead, false);
    auto reflections_target = reg.readTexture("reflections_target", gapi::TextureState::ShaderRead, false);
    auto reflections_target_filtered = reg.readTexture("reflections_target_filtered", gapi::TextureState::ShaderRead, fg::Timeline::Previous);
    auto reflections_variance_prev = reg.readTexture("reflections_variance", gapi::TextureState::ShaderRead, fg::Timeline::Previous);
    auto reflections_variance_cur = reg.modifyTexture("reflections_variance", gapi::TextureState::ShaderReadWrite);
    auto reflections_acc = reg.modifyTexture("reflections_acc", gapi::TextureState::ShaderReadWrite);
    auto late_opaque_depth = reg.readTexture("late_opaque_depth", gapi::TextureState::DepthReadStencilRead, false);

    return [motionBuf,reflections_target,reflections_target_filtered,reflections_variance_prev,reflections_variance_cur,reflections_acc,late_opaque_depth,render_size](gapi::CmdEncoder& encoder)
    {
      tfx::set_extern("motionBuf", motionBuf.get());
      tfx::set_extern("taInput", reflections_target.get());
      tfx::set_extern("taHistory", reflections_target_filtered.get());
      tfx::set_extern("taVarianceHistory", reflections_variance_prev.get());
      tfx::set_extern("taVarianceOutput", reflections_variance_cur.get());
      tfx::set_extern("taOutput", reflections_acc.get());
      tfx::set_extern("gbuffer_depth", late_opaque_depth.get());
      reflections_temporal_acc(encoder, render_size.get());
    };
  });
}

static
EventSystemRegistration mk_fg_node_reflections_temporal_acc_registration(
  mk_fg_node_reflections_temporal_acc,
  compile_ecs_name_hash("OnFrameGraphInit"),
  {
  },
  "mk_fg_node_reflections_temporal_acc"
);

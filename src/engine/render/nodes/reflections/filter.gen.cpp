// this file is generated by ecs codegen
// do not edit
#include <engine/ecs/ecs.h>
#include <engine/ecs/components_accessor.h>
#include <EASTL/functional.h>

#include "filter.ecs.cpp" 

using namespace ecs;

//Engine::OnFrameGraphInit handler
static
void mk_fg_node_reflections_blur(Event*, ComponentsAccessor&)
{
  fg::register_node("reflections_blur", FG_FILE_DECL, [](fg::Registry& reg)
  { 
    const uint2 __renderSize__ = reg.getRenderSize();

    fg::dsl::AccessDecorator render_size{__renderSize__};
    auto reflections_acc = reg.readTexture("reflections_acc", gapi::TextureState::ShaderRead, false);
    auto reflections_target_filtered = reg.modifyTexture("reflections_target_filtered", gapi::TextureState::ShaderReadWrite);
    auto gbuf2 = reg.readTexture("gbuf2", gapi::TextureState::ShaderRead, false);
    auto reflections_variance = reg.readTexture("reflections_variance", gapi::TextureState::ShaderRead, false);

    return [reflections_acc,reflections_target_filtered,gbuf2,reflections_variance,render_size](gapi::CmdEncoder& encoder)
    {
      tfx::set_extern("blurInput", reflections_acc.get());
      tfx::set_extern("blurOutput", reflections_target_filtered.get());
      tfx::set_extern("gbuffer_metal_roughness", gbuf2.get());
      tfx::set_extern("taVariance", reflections_variance.get());
      reflections_blur(encoder, render_size.get());
    };
  });
}

static
EventSystemRegistration mk_fg_node_reflections_blur_registration(
  mk_fg_node_reflections_blur,
  compile_ecs_name_hash("OnFrameGraphInit"),
  {
  },
  "mk_fg_node_reflections_blur"
);


//Engine::OnFrameGraphInit handler
static
void mk_fg_node_reflections_sync(Event*, ComponentsAccessor&)
{
  fg::register_node("reflections_sync", FG_FILE_DECL, [](fg::Registry& reg)
  { 
    auto specular_light = reg.renameTexture("reflections_target_filtered", "specular_light", gapi::TextureState::ShaderRead);
    return [](gapi::CmdEncoder&){};
  });
}

static
EventSystemRegistration mk_fg_node_reflections_sync_registration(
  mk_fg_node_reflections_sync,
  compile_ecs_name_hash("OnFrameGraphInit"),
  {
  },
  "mk_fg_node_reflections_sync"
);

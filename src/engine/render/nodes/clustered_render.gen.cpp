// this file is generated by ecs codegen
// do not edit
#include <engine/ecs/ecs.h>
#include <engine/ecs/components_accessor.h>
#include <EASTL/functional.h>

#include "clustered_render.ecs.cpp" 

using namespace ecs;

static void clustered_render_prepare_internal(Event* event, ComponentsAccessor& accessor)
{
  const Engine::OnBeforeRender* casted_event = reinterpret_cast<const Engine::OnBeforeRender*>(event);
  Engine::Render::ClusteredRenderer& clustered_render = accessor.get<Engine::Render::ClusteredRenderer>(compile_ecs_name_hash("clustered_render"));
  clustered_render_prepare(*casted_event, clustered_render);
}


static EventSystemRegistration clustered_render_prepare_registration(
  clustered_render_prepare_internal,
  compile_ecs_name_hash("OnBeforeRender"),
  {
    DESCRIBE_QUERY_COMPONENT("clustered_render", Engine::Render::ClusteredRenderer)
  },
  "clustered_render_prepare"
);


static void clustered_render_creation_handler_internal(Event* event, ComponentsAccessor& accessor)
{
  const Engine::OnFrameGraphInit* casted_event = reinterpret_cast<const Engine::OnFrameGraphInit*>(event);

  clustered_render_creation_handler(*casted_event);
}


static EventSystemRegistration clustered_render_creation_handler_registration(
  clustered_render_creation_handler_internal,
  compile_ecs_name_hash("OnFrameGraphInit"),
  {

  },
  "clustered_render_creation_handler"
);

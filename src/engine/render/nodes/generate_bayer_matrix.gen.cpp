// this file is generated by ecs codegen
// do not edit
#include <engine/ecs/ecs.h>
#include <engine/ecs/components_accessor.h>
#include <EASTL/functional.h>

#include "generate_bayer_matrix.ecs.cpp" 

using namespace ecs;

//Engine::OnFrameGraphInit handler
static
void mk_fg_node_generate_bayer_matrix(Event*, ComponentsAccessor&)
{
  fg::register_node("generate_bayer_matrix", FG_FILE_DECL, [](fg::Registry& reg)
  { 

    auto bayer_matrix_8x8 = reg.createTexture("bayer_matrix_8x8",
      gapi::TextureAllocationDescription{
        .format =          gapi::TextureFormat::R32_FLOAT,
        .extent =          uint3(8, 8, 1),
        .mipLevels =       1,
        .arrayLayers =     1,
        .samplesPerPixel = gapi::TextureSamples::s1,
        .usage =           (gapi::TextureUsage)(gapi::TextureUsage::TEX_USAGE_SRV | gapi::TextureUsage::TEX_USAGE_RT)
      },
      gapi::TextureState::TransferDst,
      fg::PERSISTENT
    );

    reg.orderMeBefore("frame_preparing");

    return [bayer_matrix_8x8](gapi::CmdEncoder& encoder)
    {
      generate_bayer_matrix(encoder, bayer_matrix_8x8.get());
    };
  });
}

static
EventSystemRegistration mk_fg_node_generate_bayer_matrix_registration(
  mk_fg_node_generate_bayer_matrix,
  compile_ecs_name_hash("OnFrameGraphInit"),
  {
  },
  "mk_fg_node_generate_bayer_matrix"
);

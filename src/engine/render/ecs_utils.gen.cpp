// this file is generated by ecs codegen
// do not edit
#include <engine/ecs/ecs.h>
#include <engine/ecs/components_accessor.h>
#include <EASTL/functional.h>

#include "ecs_utils.ecs.cpp" 

using namespace ecs;

const static DirectQueryRegistration query_dbg_queue_queryReg{
  {
    DESCRIBE_QUERY_COMPONENT("dbg_text_queue", Engine::Render::dbg::TextDbgQueue)
  },
  "query_dbg_queue"};
const static query_id_t query_dbg_queue_queryId = query_dbg_queue_queryReg.getId();


void query_dbg_queue (eastl::function<
  void(
    Engine::Render::dbg::TextDbgQueue& dbg_text_queue)> cb)
{
  ecs::get_registry().query(query_dbg_queue_queryId, [&](ComponentsAccessor& accessor)
  {
    Engine::Render::dbg::TextDbgQueue& dbg_text_queue = accessor.get<Engine::Render::dbg::TextDbgQueue>(compile_ecs_name_hash("dbg_text_queue"));
    cb(dbg_text_queue);
  });
}


const static DirectQueryRegistration query_font_render_queryReg{
  {
    DESCRIBE_QUERY_COMPONENT("font_render", Engine::Render::FontRender)
  },
  "query_font_render"};
const static query_id_t query_font_render_queryId = query_font_render_queryReg.getId();


void query_font_render (eastl::function<
  void(
    Engine::Render::FontRender& font_render)> cb)
{
  ecs::get_registry().query(query_font_render_queryId, [&](ComponentsAccessor& accessor)
  {
    Engine::Render::FontRender& font_render = accessor.get<Engine::Render::FontRender>(compile_ecs_name_hash("font_render"));
    cb(font_render);
  });
}


const static DirectQueryRegistration query_gui_render_queryReg{
  {
    DESCRIBE_QUERY_COMPONENT("gui_render", Engine::Render::GuiRender)
  },
  "query_gui_render"};
const static query_id_t query_gui_render_queryId = query_gui_render_queryReg.getId();


void query_gui_render (eastl::function<
  void(
    Engine::Render::GuiRender& gui_render)> cb)
{
  ecs::get_registry().query(query_gui_render_queryId, [&](ComponentsAccessor& accessor)
  {
    Engine::Render::GuiRender& gui_render = accessor.get<Engine::Render::GuiRender>(compile_ecs_name_hash("gui_render"));
    cb(gui_render);
  });
}


const static DirectQueryRegistration query_imgui_render_queryReg{
  {
    DESCRIBE_QUERY_COMPONENT("imgui_render", Engine::Render::ImGuiRender)
  },
  "query_imgui_render"};
const static query_id_t query_imgui_render_queryId = query_imgui_render_queryReg.getId();


void query_imgui_render (eastl::function<
  void(
    Engine::Render::ImGuiRender& imgui_render)> cb)
{
  ecs::get_registry().query(query_imgui_render_queryId, [&](ComponentsAccessor& accessor)
  {
    Engine::Render::ImGuiRender& imgui_render = accessor.get<Engine::Render::ImGuiRender>(compile_ecs_name_hash("imgui_render"));
    cb(imgui_render);
  });
}


const static DirectQueryRegistration query_render_settings_queryReg{
  {
    DESCRIBE_QUERY_COMPONENT("render_window_size", int2)
  },
  "query_render_settings"};
const static query_id_t query_render_settings_queryId = query_render_settings_queryReg.getId();


void query_render_settings (eastl::function<
  void(
    int2 render_window_size)> cb)
{
  ecs::get_registry().query(query_render_settings_queryId, [&](ComponentsAccessor& accessor)
  {
    int2 render_window_size = accessor.get<int2>(compile_ecs_name_hash("render_window_size"));
    cb(render_window_size);
  });
}
